name: Multi-Platform Build and Deploy

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.22.2
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0

jobs:
  build-and-test:
    strategy:
      matrix:
        platform: [linux, windows, macos]
    runs-on: ${{ matrix.platform }}-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Run Tests
      run: |
        python -m unittest discover -s tests

    - name: Build Flutter App
      run: |
        flutter config --no-analytics
        flutter doctor
        if [ ${{ matrix.platform }} == "linux" ]; then
          flet build linux --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION;
        elif [ ${{ matrix.platform }} == "macos" ]; then
          flet build macos --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION;
        elif [ ${{ matrix.platform }} == "windows" ]; then
          flet build windows --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION;
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build-artifact
        path: build/${{ matrix.platform }}
